import org.jetbrains.dokka.gradle.DokkaTask
import com.android.build.gradle.tasks.JavaDocGenerationTask
import com.android.build.gradle.tasks.JavaDocJarTask
import com.android.build.gradle.tasks.SourceJarTask

plugins {
    id("com.android.library")
    id("kotlin-android")
    alias(google.plugins.protobuf.gradle)
    id 'org.jetbrains.dokka'
}

android {
    defaultConfig {
        kotlinOptions {
            freeCompilerArgs = ["-Xopt-in=kotlin.RequiresOptIn"]
        }
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

protobuf {
  protoc {
    artifact = rootProject.ext.protocArtifact
  }
  plugins {
    java {
        artifact = rootProject.ext.protocGenGrpcJava
    }
    grpc {
        artifact = rootProject.ext.protocGenGrpcJava
    }
    grpckt {
        artifact = rootProject.ext.protocGenGrpcKotlin
    }
  }
  generateProtoTasks {
    all().each { task ->
      task.plugins {
        java {
          option "lite"
        }
        grpc {
          option "lite"
        }
        grpckt {
          option "lite"
        }
      }
      task.builtins {
        kotlin {
          option "lite"
        }
      }
    }
  }
}

tasks.withType(SourceJarTask).configureEach {
    // add missing sources
    from file("$buildDir/generated/source/proto/release/kotlin")
    from file("$buildDir/generated/source/proto/release/grpckt")
}

/**
 * JavaDocGenerationTask cannot perform dokka with generated code from protobuf.
 * So added a custom task named `javadocJar` to generate javadoc, and replace it
 */

/*
tasks.withType(JavaDocGenerationTask).configureEach {
    sources.files.addAll(files("$buildDir/generated/source/proto/release/kotlin"))
    sources.files.addAll(files("$buildDir/generated/source/proto/release/grpckt"))
}
*/

tasks.withType(JavaDocJarTask).configureEach {
    dependsOn javadocJar
    enabled = false
}

dokkaJavadoc.configure {
    dependsOn "generateReleaseProto"
    dokkaSourceSets {
        named("main") {
            sourceRoots.from file("$buildDir/generated/source/proto/release/java")
            sourceRoots.from file("$buildDir/generated/source/proto/release/kotlin")
            sourceRoots.from file("$buildDir/generated/source/proto/release/grpc")
            sourceRoots.from file("$buildDir/generated/source/proto/release/grpckt")
            // include generated sources
            suppressGeneratedFiles.set(false)
        }
    }
}

task javadocJar(type: Jar, dependsOn: "dokkaJavadoc") {
    archiveClassifier = "javadoc"
    from file("$buildDir/dokka/javadoc")
    archiveFileName = "out.jar"
    destinationDirectory = file("$buildDir/intermediates/java_doc_jar/release")
}

dependencies {
    implementation google.protobuf.kotlin.lite
    implementation google.grpc.protobuf.lite
    implementation google.grpc.stub
    implementation google.grpc.kotlin.stub
}
