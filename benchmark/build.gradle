plugins {
    id 'com.android.test'
    id 'kotlin-android'
}

// [START macrobenchmark_setup_android]
android {
    namespace "com.example.macrobenchmark"

    // [START_EXCLUDE]
    compileSdkVersion 34
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 34

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }
    // [END_EXCLUDE]
    // Note that your module name may have different name
    targetProjectPath = ":app"
    // Enable the benchmark to run separately from the app process
    experimentalProperties["android.experimental.self-instrumenting"] = true


    flavorDimensions 'default'
    productFlavors {
        production { }
    }
    buildTypes {
        // declare a build type to match the target app's build type
        release {
            debuggable = true
            signingConfig = debug.signingConfig
        }
    }
}
// [END macrobenchmark_setup_android]

// [START macrobenchmark_setup_variant]
androidComponents {
    beforeVariants(selector().all()) {
        // enable only the benchmark buildType, since we only want to measure close to release performance
        enabled = (buildType == 'release' && flavorName == 'production')
    }
}
// [END macrobenchmark_setup_variant]

// [START macrobenchmark_setup_dependencies]
dependencies {
    // [START_EXCLUDE]
    implementation androidxLibs.test.ext.junit.ktx
    implementation androidxLibs.test.espresso.core
    implementation androidxLibs.test.uiautomator
    // [END_EXCLUDE]
    implementation androidxLibs.benchmark.macro.junit4
}
// [END macrobenchmark_setup_dependencies]

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += "-opt-in=kotlin.RequiresOptIn"
    }
}
